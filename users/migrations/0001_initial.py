# Generated by Django 5.1.6 on 2025-02-11 19:19

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CorreoElectronicoContactoUsuario',
            fields=[
                ('id_ccelectronico', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('correo_electronico', models.EmailField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_usr_ccelectronico',
            },
        ),
        migrations.CreateModel(
            name='DatosBasicosUsuario',
            fields=[
                ('id_busuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Datos básicos del usuario',
                'db_table': 'eco_usr_basicosusuario',
            },
        ),
        migrations.CreateModel(
            name='DatosUbicacionUsuario',
            fields=[
                ('id_ubicacion', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('direccion', models.CharField(blank=True, max_length=160, null=True)),
                ('indicacion', models.CharField(blank=True, max_length=160, null=True)),
                ('object_id', models.CharField(blank=True, max_length=50, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'Datos de ubicación',
                'db_table': 'eco_usr_ubicacion',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id_departamento', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_departamento', models.CharField(max_length=85)),
            ],
            options={
                'verbose_name_plural': 'Departamentos',
                'db_table': 'eco_ext_departamento',
            },
        ),
        migrations.CreateModel(
            name='Dependencia',
            fields=[
                ('id_dependencia', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_dependencia', models.CharField(max_length=70)),
                ('siglas', models.CharField(max_length=10)),
                ('url', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Dependencia',
                'db_table': 'eco_bas_dependencia',
            },
        ),
        migrations.CreateModel(
            name='Eps',
            fields=[
                ('id_eps', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_eps', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Eps',
                'db_table': 'eco_bas_eps',
            },
        ),
        migrations.CreateModel(
            name='EstadoCivil',
            fields=[
                ('id_ecivil', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_ecivil', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Estado civil',
                'db_table': 'eco_bas_estadocivil',
            },
        ),
        migrations.CreateModel(
            name='FondoPensiones',
            fields=[
                ('id_fpensiones', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_fpensiones', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Fondo de pensiones',
                'db_table': 'eco_bas_fpensiones',
            },
        ),
        migrations.CreateModel(
            name='GpRh',
            fields=[
                ('id_grh', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_grh', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Grupo rh',
                'db_table': 'eco_bas_gruporh',
            },
        ),
        migrations.CreateModel(
            name='IdentificacionUsuario',
            fields=[
                ('id_iusuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_identificacion', models.CharField(blank=True, max_length=20)),
                ('fecha_expedicion', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Datos de la identificación del usuario',
                'db_table': 'eco_usr_iusuario',
            },
        ),
        migrations.CreateModel(
            name='NombrePersonaUsuario',
            fields=[
                ('id_npersona', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('primer_nombre', models.CharField(max_length=20)),
                ('segundo_nombre', models.CharField(blank=True, max_length=50, null=True)),
                ('primer_apellido', models.CharField(max_length=50)),
                ('segundo_apellido', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Nombres y apellidos de las personas',
                'db_table': 'eco_usr_nombrepersona',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_pais', models.CharField(max_length=170)),
                ('es_colombia', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Países',
                'db_table': 'eco_ext_pais',
            },
        ),
        migrations.CreateModel(
            name='TelefonoCelularContactoUsuario',
            fields=[
                ('id_ctelefono', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('celular_uno', models.CharField(blank=True, max_length=15, null=True)),
                ('celular_dos', models.CharField(blank=True, max_length=15, null=True)),
                ('celular_emergencia', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_usr_ctelefono',
            },
        ),
        migrations.CreateModel(
            name='TipoGenero',
            fields=[
                ('id_tgenero', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tgenero', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de género',
                'db_table': 'eco_bas_tipogenero',
            },
        ),
        migrations.CreateModel(
            name='TipoIdentificacion',
            fields=[
                ('id_tidentificacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tidentificacion', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de identificación',
                'db_table': 'eco_bas_tipoidentificacion',
            },
        ),
        migrations.CreateModel(
            name='TipoOrientacionSexual',
            fields=[
                ('id_torientacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_torientacion', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de orientación sexual',
                'db_table': 'eco_bas_tipoorientacion',
            },
        ),
        migrations.CreateModel(
            name='TipoSexo',
            fields=[
                ('id_tsexo', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_tsexo', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Tipo de sexo',
                'db_table': 'eco_bas_tiposexo',
            },
        ),
        migrations.CreateModel(
            name='TipoVinculacion',
            fields=[
                ('id_tvinculacion', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_tvinculacion', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name_plural': 'Tipo de vinculación a la UNP',
                'db_table': 'eco_bas_tipovinculacion',
            },
        ),
        migrations.CreateModel(
            name='ZonaUbicacion',
            fields=[
                ('id_zubicacion', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_zubicacion', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Zona de ubicación',
                'db_table': 'eco_bas_zonaubicacion',
            },
        ),
        migrations.CreateModel(
            name='DatosComplementariosUsuario',
            fields=[
                ('id_cusuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('acepto_politicas', models.BooleanField(default=False)),
                ('basicos_usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.datosbasicosusuario')),
                ('eps', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.eps')),
                ('estado_civil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.estadocivil')),
                ('fondo_pensiones', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.fondopensiones')),
                ('tipo_vinculacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.tipovinculacion')),
            ],
            options={
                'verbose_name_plural': 'Datos básicos del usuario',
                'db_table': 'eco_usr_complementariosusuario',
            },
        ),
        migrations.CreateModel(
            name='ContratoContratista',
            fields=[
                ('id_contrato', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_contrato', models.CharField(blank=True, max_length=10, null=True)),
                ('fecha_iniciocontrato', models.DateField(blank=True, null=True)),
                ('fecha_fincontrato', models.DateField(blank=True, null=True)),
                ('complementario_usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.datoscomplementariosusuario')),
            ],
            options={
                'verbose_name_plural': 'Datos básicos del contrato',
                'db_table': 'eco_usr_datoscontrato',
            },
        ),
        migrations.CreateModel(
            name='UbicacionRural',
            fields=[
                ('datosubicacionusuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.datosubicacionusuario')),
                ('corregimiento', models.CharField(blank=True, max_length=150, null=True)),
                ('centro_poblado', models.CharField(blank=True, max_length=150, null=True)),
                ('vereda', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'Dirección rural',
                'db_table': 'eco_usr_direccionrural',
            },
            bases=('users.datosubicacionusuario',),
        ),
        migrations.CreateModel(
            name='UbicacionUrbana',
            fields=[
                ('datosubicacionusuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='users.datosubicacionusuario')),
                ('nombre_barrio', models.CharField(blank=True, max_length=100, null=True)),
                ('tipo_viaprincipal', models.CharField(blank=True, max_length=20, null=True)),
                ('numero_viaprincipal', models.IntegerField(blank=True, null=True)),
                ('letra_principal', models.CharField(blank=True, max_length=10, null=True)),
                ('es_bis', models.BooleanField(null=True)),
                ('cuadrante_principal', models.CharField(blank=True, max_length=10, null=True)),
                ('numero_viasecundaria', models.IntegerField(blank=True, null=True)),
                ('letra_secundaria', models.CharField(blank=True, max_length=10, null=True)),
                ('cuadrante_secundario', models.CharField(blank=True, max_length=10, null=True)),
                ('numero_placa', models.IntegerField(blank=True, null=True)),
                ('complemento', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'verbose_name_plural': 'Dirección urbana',
                'db_table': 'eco_usr_direccionurbana',
            },
            bases=('users.datosubicacionusuario',),
        ),
        migrations.AddField(
            model_name='datosubicacionusuario',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.departamento'),
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='gp_rh',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.gprh'),
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id_grupo', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_grupo', models.CharField(max_length=200)),
                ('siglas', models.CharField(max_length=10)),
                ('url', models.CharField(max_length=10)),
                ('dependencia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dependencia')),
            ],
            options={
                'verbose_name_plural': 'Grupo',
                'db_table': 'eco_bas_grupo',
            },
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='identificacion_usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.identificacionusuario'),
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id_municipio', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_municipio', models.CharField(max_length=85)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.departamento')),
            ],
            options={
                'verbose_name_plural': 'Municipios',
                'db_table': 'eco_ext_municipio',
            },
        ),
        migrations.AddField(
            model_name='datosubicacionusuario',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.municipio'),
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='nombre_persona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.nombrepersonausuario'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.pais'),
        ),
        migrations.AddField(
            model_name='datosubicacionusuario',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.pais'),
        ),
        migrations.CreateModel(
            name='ResolucionFuncionario',
            fields=[
                ('id_resolucion', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_resolucion', models.CharField(blank=True, max_length=30, null=True)),
                ('complementario_usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.datoscomplementariosusuario')),
            ],
            options={
                'verbose_name_plural': 'Datos básicos de la resolucion del contratista',
                'db_table': 'eco_usr_datosresolucion',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_rol', models.SmallAutoField(primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(max_length=30)),
                ('url', models.CharField(max_length=50)),
                ('Grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.grupo')),
            ],
            options={
                'verbose_name_plural': 'Rol',
                'db_table': 'eco_bas_rol',
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id_pusuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('usuario', models.CharField(max_length=100, unique=True)),
                ('basicos_usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.datosbasicosusuario')),
                ('dependencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dependencia')),
                ('grupo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.grupo')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.rol')),
            ],
            options={
                'verbose_name_plural': 'perfil del usuario',
                'db_table': 'eco_usr_perfilusuario',
            },
        ),
        migrations.CreateModel(
            name='DatosContactoUsuario',
            fields=[
                ('id_contacto', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.CharField(blank=True, max_length=50, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('id_ccelectronico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.correoelectronicocontactousuario')),
                ('id_ctelefono', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.telefonocelularcontactousuario')),
            ],
            options={
                'verbose_name_plural': 'Datos de contacto',
                'db_table': 'eco_usr_contacto',
            },
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='genero_persona',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.tipogenero'),
        ),
        migrations.AddField(
            model_name='identificacionusuario',
            name='tipo_identificacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.tipoidentificacion'),
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='orientacion_persona',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.tipoorientacionsexual'),
        ),
        migrations.AddField(
            model_name='datosbasicosusuario',
            name='sexo_persona',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.tiposexo'),
        ),
        migrations.AddField(
            model_name='datosubicacionusuario',
            name='zona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.zonaubicacion'),
        ),
    ]
